{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst settingsSlice = createSlice({\n  name: \"settings\",\n  initialState: {\n    settings: [],\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    // Add new Product (Create)\n    addSettings: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    addSettingsSuccess: (state, action) => {\n      state.isFetching = false;\n      state.settings.push(action.payload);\n    },\n    addSettingsFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    // Get All Settings\n    settingsStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    settingsSuccess: (state, action) => {\n      state.isFetching = false;\n      state.settings = action.payload;\n    },\n    settingsFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  addSettings,\n  addSettingsSuccess,\n  addSettingsFailure,\n  settingsStart,\n  settingsSuccess,\n  settingsFailure\n} = settingsSlice.actions;\nexport default settingsSlice.reducer;","map":{"version":3,"names":["createSlice","settingsSlice","name","initialState","settings","isFetching","error","reducers","addSettings","state","addSettingsSuccess","action","push","payload","addSettingsFailure","settingsStart","settingsSuccess","settingsFailure","actions","reducer"],"sources":["/home/ambrose/Desktop/dowellnps frontend/client/src/redux/SettingsSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst settingsSlice = createSlice({\n    name: \"settings\",\n    initialState :{\n        settings : [],\n        isFetching: false,\n        error: false,\n    },\n    reducers:{\n        // Add new Product (Create)\n        addSettings: (state)=>{\n            state.isFetching=true\n            state.error=false\n        },\n        addSettingsSuccess: (state, action)=>{\n            state.isFetching=false;\n            state.settings.push(action.payload)\n        },\n        addSettingsFailure: (state)=>{\n            state.isFetching=false\n            state.error=true\n        },\n\n        // Get All Settings\n        settingsStart: (state)=>{\n            state.isFetching=true\n            state.error=false\n        },\n        settingsSuccess: (state, action)=>{\n            state.isFetching=false\n            state.settings = action.payload\n        },\n        settingsFailure: (state)=>{\n            state.isFetching=false\n            state.error=true\n        },\n\n    }\n})\n\nexport const {addSettings, addSettingsSuccess, addSettingsFailure,settingsStart,settingsSuccess,settingsFailure} = settingsSlice.actions\nexport default settingsSlice.reducer "],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,UADwB;EAE9BC,YAAY,EAAE;IACVC,QAAQ,EAAG,EADD;IAEVC,UAAU,EAAE,KAFF;IAGVC,KAAK,EAAE;EAHG,CAFgB;EAO9BC,QAAQ,EAAC;IACL;IACAC,WAAW,EAAGC,KAAD,IAAS;MAClBA,KAAK,CAACJ,UAAN,GAAiB,IAAjB;MACAI,KAAK,CAACH,KAAN,GAAY,KAAZ;IACH,CALI;IAMLI,kBAAkB,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAiB;MACjCF,KAAK,CAACJ,UAAN,GAAiB,KAAjB;MACAI,KAAK,CAACL,QAAN,CAAeQ,IAAf,CAAoBD,MAAM,CAACE,OAA3B;IACH,CATI;IAULC,kBAAkB,EAAGL,KAAD,IAAS;MACzBA,KAAK,CAACJ,UAAN,GAAiB,KAAjB;MACAI,KAAK,CAACH,KAAN,GAAY,IAAZ;IACH,CAbI;IAeL;IACAS,aAAa,EAAGN,KAAD,IAAS;MACpBA,KAAK,CAACJ,UAAN,GAAiB,IAAjB;MACAI,KAAK,CAACH,KAAN,GAAY,KAAZ;IACH,CAnBI;IAoBLU,eAAe,EAAE,CAACP,KAAD,EAAQE,MAAR,KAAiB;MAC9BF,KAAK,CAACJ,UAAN,GAAiB,KAAjB;MACAI,KAAK,CAACL,QAAN,GAAiBO,MAAM,CAACE,OAAxB;IACH,CAvBI;IAwBLI,eAAe,EAAGR,KAAD,IAAS;MACtBA,KAAK,CAACJ,UAAN,GAAiB,KAAjB;MACAI,KAAK,CAACH,KAAN,GAAY,IAAZ;IACH;EA3BI;AAPqB,CAAD,CAAjC;AAuCA,OAAO,MAAM;EAACE,WAAD;EAAcE,kBAAd;EAAkCI,kBAAlC;EAAqDC,aAArD;EAAmEC,eAAnE;EAAmFC;AAAnF,IAAsGhB,aAAa,CAACiB,OAA1H;AACP,eAAejB,aAAa,CAACkB,OAA7B"},"metadata":{},"sourceType":"module"}