{"ast":null,"code":"// Combine Reducer is used to persist two or more reducers\nimport { configureStore } from '@reduxjs/toolkit';\nimport settingsReducer from './SettingsSlice';\nimport responseReducer from './ResponseSlice'; // persit\n\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n}; // const rootReducer = combineReducers({user: userLogin, cart: cartReducer})\n\nconst persistedReducer = persistReducer(persistConfig, settingsReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","settingsReducer","responseReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/home/ambrose/Desktop/dowellnps frontend/client/src/redux/Store.js"],"sourcesContent":["// Combine Reducer is used to persist two or more reducers\nimport {configureStore} from '@reduxjs/toolkit'\nimport settingsReducer from './SettingsSlice'\nimport responseReducer from './ResponseSlice'\n\n// persit\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n  } from 'redux-persist'\n  import storage from 'redux-persist/lib/storage' \n\nconst persistConfig = {\n    key: 'root',\n    version: 1,\n    storage,\n}\n\n// const rootReducer = combineReducers({user: userLogin, cart: cartReducer})\n  \nconst persistedReducer = persistReducer(persistConfig, settingsReducer)\n  \n\n\nexport const store = configureStore({\n    reducer:persistedReducer,\n\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n})\n\nexport let persistor = persistStore(store)"],"mappings":"AAAA;AACA,SAAQA,cAAR,QAA6B,kBAA7B;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,OAAOC,eAAP,MAA4B,iBAA5B,C,CAEA;;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAUE,OAAOC,OAAP,MAAoB,2BAApB;AAEF,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MADa;EAElBC,OAAO,EAAE,CAFS;EAGlBH;AAHkB,CAAtB,C,CAMA;;AAEA,MAAMI,gBAAgB,GAAGX,cAAc,CAACQ,aAAD,EAAgBX,eAAhB,CAAvC;AAIA,OAAO,MAAMe,KAAK,GAAGhB,cAAc,CAAC;EAChCiB,OAAO,EAACF,gBADwB;EAGhCG,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAChB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADC;EADA,CAAD;AAJY,CAAD,CAA5B;AAWP,OAAO,IAAIY,SAAS,GAAGnB,YAAY,CAACa,KAAD,CAA5B"},"metadata":{},"sourceType":"module"}